<Window x:Class="leituraWPF.FallbackWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Definir Dados Manualmente"
        Width="480" Height="520"
        MinWidth="420"
        WindowStartupLocation="CenterOwner"
        ResizeMode="NoResize"
        Background="White"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True"
        TextOptions.TextFormattingMode="Display">

    <!-- Paleta centralizada -->
    <Window.Resources>
        <SolidColorBrush x:Key="Primary" Color="#2E7BDB"/>
        <SolidColorBrush x:Key="PrimaryDark" Color="#1E5FAF"/>
        <SolidColorBrush x:Key="PrimaryDarker" Color="#1A4B8C"/>
        <SolidColorBrush x:Key="Ink" Color="#2D3748"/>
        <SolidColorBrush x:Key="InkMuted" Color="#718096"/>
        <SolidColorBrush x:Key="LineLight" Color="#E2E8F0"/>
        <SolidColorBrush x:Key="CardBg" Color="#F8FBFF"/>
        <SolidColorBrush x:Key="CardLine" Color="#E8F0FE"/>

        <!-- Buttons -->
        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource Primary}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="14,8"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="MinWidth" Value="108"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="8" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource PrimaryDark}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource PrimaryDarker}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SecondaryButton" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="{StaticResource Primary}"/>
            <Setter Property="Padding" Value="14,8"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource CardLine}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="MinWidth" Value="108"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F8FBFF"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Primary}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#E8F0FE"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Tipografia -->
        <Style x:Key="HeaderText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#1A365D"/>
            <Setter Property="Margin" Value="0,0,0,12"/>
        </Style>

        <Style x:Key="LabelText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12.5"/>
            <Setter Property="Foreground" Value="{StaticResource Ink}"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Margin" Value="0,12,0,4"/>
        </Style>

        <!-- TEXTBOX (mais compacto) -->
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource Primary}"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="Padding" Value="6,6"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource Ink}"/>
            <Setter Property="CaretBrush" Value="{StaticResource Primary}"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border x:Name="Outer"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"/>
                            <TextBlock x:Name="Placeholder"
                                       Margin="{TemplateBinding Padding}"
                                       Foreground="{StaticResource InkMuted}"
                                       IsHitTestVisible="False"
                                       Text="{TemplateBinding Tag}"
                                       VerticalAlignment="Center"
                                       Visibility="Collapsed"/>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Outer" Property="BorderBrush" Value="{StaticResource PrimaryDark}"/>
                                <Setter Property="Background" Value="#FAFBFF"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Placeholder" Property="Visibility" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Background" Value="#F7FAFC"/>
                                <Setter Property="Foreground" Value="{StaticResource InkMuted}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#9AA5B1"/>
                                <Setter TargetName="Outer" Property="Opacity" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter TargetName="Outer" Property="BorderBrush" Value="#E53E3E"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Variante grande (se precisar destacar) -->
        <Style x:Key="ModernTextBox.Large" BasedOn="{StaticResource ModernTextBox}" TargetType="TextBox">
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="Height" Value="52"/>
            <Setter Property="Padding" Value="8,6"/>
        </Style>

        <!-- COMBOBOX (sem mudança visual, só espaçamento padrão menor) -->
        <Style x:Key="ModernComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource Primary}"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="Padding" Value="6,6"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="Outer"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="36"/>
                                </Grid.ColumnDefinitions>

                                <ContentPresenter x:Name="ContentSite"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding SelectionBoxItem}"/>

                                <ToggleButton x:Name="DropDownToggle"
                                              Grid.Column="1"
                                              Focusable="False"
                                              Background="Transparent"
                                              BorderThickness="0"
                                              Cursor="Hand"
                                              IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                              ClickMode="Press">
                                    <Grid>
                                        <Path x:Name="Arrow"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M 0 0 L 6 6 L 12 0 Z"
                                              Stretch="Fill"
                                              Fill="{StaticResource InkMuted}"
                                              Width="10" Height="5"
                                              RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="0"/>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </ToggleButton>
                            </Grid>

                            <Popup x:Name="PART_Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Fade">
                                <Border Background="White"
                                        BorderBrush="{StaticResource LineLight}"
                                        BorderThickness="2"
                                        CornerRadius="8"
                                        MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ScrollViewer CanContentScroll="True">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Outer" Property="BorderBrush" Value="{StaticResource PrimaryDark}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="Outer" Property="BorderBrush" Value="{StaticResource PrimaryDark}"/>
                            </Trigger>

                            <Trigger SourceName="DropDownToggle" Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                             To="180" Duration="0:0:0.10" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                             To="0" Duration="0:0:0.10" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Outer" Property="Opacity" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter TargetName="Outer" Property="BorderBrush" Value="#E53E3E"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- CheckBox -->
        <Style x:Key="ModernCheckBox" TargetType="CheckBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource Ink}"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Margin" Value="0,6,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="CheckBorder"
                                    Width="18" Height="18"
                                    Background="White"
                                    BorderBrush="{StaticResource LineLight}"
                                    BorderThickness="2"
                                    CornerRadius="4"
                                    Margin="0,0,8,0">
                                <Path x:Name="CheckMark"
                                      Data="M 3 8 L 7 12 L 13 4"
                                      Stroke="{StaticResource Primary}"
                                      StrokeThickness="2"
                                      Visibility="Collapsed"/>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="CheckBorder" Property="Background" Value="#F0F8FF"/>
                                <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{StaticResource Primary}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckBorder" Property="BorderBrush" Value="{StaticResource Primary}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="CheckBorder" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Cards -->
        <Style x:Key="InfoCard" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource CardBg}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CardLine}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="12"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#E2E8F0" Direction="270" ShadowDepth="2" BlurRadius="8" Opacity="0.3"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ProgressBar -->
        <Style x:Key="ModernProgressBar" TargetType="ProgressBar">
            <Setter Property="Height" Value="6"/>
            <Setter Property="Background" Value="{StaticResource LineLight}"/>
            <Setter Property="Foreground" Value="{StaticResource Primary}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4">
                            <Rectangle x:Name="PART_Track"
                                       Fill="{TemplateBinding Foreground}"
                                       HorizontalAlignment="Left"
                                       RadiusX="4" RadiusY="4"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!-- Fundo com gradiente sutil -->
    <Border>
        <Border.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="White" Offset="0"/>
                <GradientStop Color="#FAFBFF" Offset="1"/>
            </LinearGradientBrush>
        </Border.Background>

        <Grid Margin="20,16,20,20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <TextBlock Grid.Row="0"
                       Text="Configuração Manual de Dados"
                       Style="{StaticResource HeaderText}"/>

            <!-- Conteúdo -->
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <!-- ID SIGFI -->
                    <TextBlock Style="{StaticResource LabelText}">
                        <Run Text="ID SIGFI"/>
                        <Run Text=" (preencha apenas esse campo com o ID do cliente)"/>
                    </TextBlock>
                    <TextBox x:Name="TxtIdSigfi"
                             Style="{StaticResource ModernTextBox.Large}"
                             Tag="Ex.: 12345"
                             TextChanged="TxtIdSigfi_TextChanged" Height="80"/>

                    <!-- Rota -->
                    <TextBlock Text="Rota" Style="{StaticResource LabelText}"/>
                    <ComboBox x:Name="CmbRota"
                              Style="{StaticResource ModernComboBox}"
                              SelectionChanged="CmbRota_Changed"/>

                    <!-- Check -->
                    <CheckBox x:Name="Chk160"
                              Content="Sistema SIGFI 160 HOPPECK?"
                              Style="{StaticResource ModernCheckBox}"
                              Checked="Chk160_Checked"
                              Unchecked="Chk160_Checked"/>

                    <!-- Card de informações -->
                    <Border Style="{StaticResource InfoCard}">
                        <StackPanel>
                            <TextBlock Text="Informações do Cliente"
                                       Style="{StaticResource LabelText}"
                                       Margin="0,0,0,6"/>
                            <Label x:Name="LblCliente"
                                   Content="Digite o ID SIGFI para buscar automaticamente..."
                                   FontSize="12.5"
                                   Foreground="{StaticResource InkMuted}"
                                   Padding="0"/>
                        </StackPanel>
                    </Border>

                    <!-- Progresso -->
                    <Border x:Name="RenBox"
                            Style="{StaticResource InfoCard}"
                            Background="#FFF8E1"
                            BorderBrush="#FFE0B2"
                            Visibility="Collapsed">
                        <StackPanel>
                            <TextBlock Text="Processando arquivos..."
                                       FontSize="13.5"
                                       FontWeight="SemiBold"
                                       Foreground="#E65100"
                                       Margin="0,0,0,8"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ProgressBar x:Name="RenProgress"
                                             Grid.Column="0"
                                             Style="{StaticResource ModernProgressBar}"
                                             Minimum="0" Maximum="100"/>
                                <TextBlock x:Name="RenPercent"
                                           Grid.Column="1"
                                           Margin="10,0,0,0"
                                           VerticalAlignment="Center"
                                           FontWeight="SemiBold"
                                           FontSize="12"
                                           Foreground="#E65100"/>
                            </Grid>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </ScrollViewer>

            <!-- Rodapé -->
            <StackPanel Grid.Row="2"
                        Orientation="Horizontal"
                        HorizontalAlignment="Right"
                        Margin="0,12,0,0">
                <Button x:Name="BtnCancel"
                        Content="Cancelar"
                        Style="{StaticResource SecondaryButton}"
                        Margin="0,0,8,0"
                        Click="Cancel_Click"/>
                <Button x:Name="BtnOk"
                        Content="Confirmar"
                        Style="{StaticResource PrimaryButton}"
                        Click="Ok_Click"/>
            </StackPanel>
        </Grid>
    </Border>
</Window>
